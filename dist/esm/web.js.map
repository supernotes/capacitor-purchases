{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\n\nimport { PACKAGE_TYPE } from \"./definitions\";\nimport type {\n  CapacitorPurchasesPlugin,\n  LogInResult,\n  CustomerInfo,\n  Offerings,\n  Offering,\n  Package,\n} from \"./definitions\";\n\nexport const mockPackA: Package = {\n  identifier: \"com.example.test\",\n  packageType: PACKAGE_TYPE.ANNUAL,\n  product: {\n    identifier: \"com.example.yearly\",\n    description: \"Test\",\n    title: \"Test\",\n    price: 19.99,\n    priceString: \"$19.99\",\n    currencyCode: \"USD\",\n    currencySymbol: \"$\",\n    isFamilyShareable: false,\n    subscriptionGroupIdentifier: \"com.example.test\",\n    subscriptionPeriod: {\n      numberOfUnits: 1,\n      unit: 1,\n    },\n    introductoryPrice: null,\n    discounts: [],\n  },\n  offeringIdentifier: \"com.example.test.offering1\",\n};\n\nexport const mockPackM: Package = {\n  identifier: \"com.example.test\",\n  packageType: PACKAGE_TYPE.MONTHLY,\n  product: {\n    identifier: \"com.example.monthly\",\n    description: \"Test\",\n    title: \"Test\",\n    price: 3.99,\n    priceString: \"$3.99\",\n    currencyCode: \"USD\",\n    currencySymbol: \"$\",\n    isFamilyShareable: false,\n    subscriptionGroupIdentifier: \"com.example.test\",\n    subscriptionPeriod: {\n      numberOfUnits: 1,\n      unit: 1,\n    },\n    introductoryPrice: null,\n    discounts: [],\n  },\n  offeringIdentifier: \"com.example.test.offering1\",\n};\n\nexport const mockCurrent: Offering = {\n  identifier: \"com.example.test.offering1\",\n  serverDescription: \"Test offering\",\n  availablePackages: [mockPackA, mockPackM],\n  lifetime: null,\n  annual: mockPackA,\n  sixMonth: null,\n  threeMonth: null,\n  twoMonth: null,\n  monthly: mockPackM,\n  weekly: null,\n};\n\nexport const mockCustomerInfo: CustomerInfo = {\n  entitlements: {\n    all: {},\n    active: {},\n  },\n  activeSubscriptions: [\"\"],\n  allPurchasedProductIdentifiers: [\"\"],\n  nonSubscriptionTransactions: [],\n  latestExpirationDate: null,\n  firstSeen: \"2020-01-01T00:00:00.000Z\",\n  originalAppUserId: \"\",\n  requestDate: \"2020-01-01T00:00:00.000Z\",\n  originalApplicationVersion: \"\",\n  originalPurchaseDate: null,\n  managementURL: null,\n};\n\nexport const mockAll: { [key: string]: Offering } = {\n  current: mockCurrent,\n};\n\nexport const mockOffering: Offerings = {\n  all: mockAll,\n  current: mockCurrent,\n};\n\nexport class CapacitorPurchasesWeb\n  extends WebPlugin\n  implements CapacitorPurchasesPlugin\n{\n  setup(data: { apiKey: string }): Promise<void> {\n    console.error(\"setup only mocked in web\", data);\n    return Promise.resolve();\n  }\n\n  async getOfferings(): Promise<{ offerings: Offerings }> {\n    console.error(\"getOfferings only mocked in web\");\n    return { offerings: mockOffering };\n  }\n\n  async purchasePackage(data: {\n    identifier: string;\n    offeringIdentifier: string;\n  }): Promise<{ customerInfo: CustomerInfo }> {\n    console.error(\"purchasePackage only mocked in web\", data);\n    return { customerInfo: mockCustomerInfo };\n  }\n\n  async restorePurchases(): Promise<{ customerInfo: CustomerInfo }> {\n    console.error(\"purchasePackage only mocked in web\");\n    return { customerInfo: mockCustomerInfo };\n  }\n\n  async setAttributes(data: {\n    attributes: { [key: string]: string | null };\n  }): Promise<void> {\n    console.error(\"setAttributes only mocked in web\", data);\n    return Promise.resolve();\n  }\n\n  async logIn(data: { appUserID: string }): Promise<LogInResult> {\n    console.error(\"logIn only mocked in web\", data);\n    return {\n      customerInfo: mockCustomerInfo,\n      created: true,\n    };\n  }\n\n  async logOut(): Promise<{ customerInfo: CustomerInfo }> {\n    console.error(\"logOut only mocked in web\");\n    return { customerInfo: mockCustomerInfo };\n  }\n\n  async getCustomerInfo(): Promise<{ customerInfo: CustomerInfo }> {\n    console.error(\"getCustomerInfo only mocked in web\");\n    return { customerInfo: mockCustomerInfo };\n  }\n\n  async setDebugLogsEnabled(data: { enabled: boolean }): Promise<void> {\n    console.error(\"setDebugLogsEnabled only mocked in web\", data);\n  }\n}\n"]}